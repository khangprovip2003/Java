import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int c = 13;
        printMenuMain();

        while (c != 0) {
            System.out.print("Option : ");

            try {
                c = Integer.parseInt(sc.nextLine());
                switch (c) {
                    case 0:
                        System.out.println("BYE BYE üòç");
                        break;
                    case 1:
                        modificationElement();
                        break;
                    case 2:
                        mapSize();
                        break;
                    case 3:
                        mapCopy();
                        break;
                    case 4:
                        deletedMap();
                        break;
                    case 5:
                        checkEmptyMap();
                        break;
                    case 6:
                        shallowCopyMap();
                        break;
                    case 7:
                        checkSpecifiedKey();
                        break;
                    case 8:
                        checkSpecifiedValue();
                        break;
                    case 9:
                        collectionViewOfMapping();
                    case 10:
                        getValueOfSpecifiedKey();
                        break;
                    case 11:
                        setOfKeysMap();
                        break;
                    case 12:
                        setOfValuesMap();
                        break;
                    default:
                        System.out.println("Please choose true option!!!");
                }
            } catch (Exception var4) {
                System.out.println("Do you know how to input a positive number?");
            }
        }

    }

    public static void printMenuMain() {
        System.out.println("[1].Li√™n k·∫øt gi√° tr·ªã ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh v·ªõi kh√≥a ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh trong HashMap");
        System.out.println("[2].ƒê·∫øm s·ªë l∆∞·ª£ng √°nh x·∫° kh√≥a-gi√° tr·ªã (k√≠ch th∆∞·ªõc) trong m·ªôt b·∫£n ƒë·ªì");
        System.out.println("[3].Sao ch√©p t·∫•t c·∫£ c√°c √°nh x·∫° t·ª´ b·∫£n ƒë·ªì ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh sang b·∫£n ƒë·ªì kh√°c");
        System.out.println("[4].Lo·∫°i b·ªè t·∫•t c·∫£ c√°c √°nh x·∫° kh·ªèi m·ªôt b·∫£n ƒë·ªì");
        System.out.println("[5].Ki·ªÉm tra xem m·ªôt b·∫£n ƒë·ªì c√≥ ch·ª©a c√°c √°nh x·∫° kh√≥a-gi√° tr·ªã (tr·ªëng) hay kh√¥ng");
        System.out.println("[6].L·∫•y m·ªôt b·∫£n sao n√¥ng c·ªßa m·ªôt c√° th·ªÉ HashMap");
        System.out.println("[7].Ki·ªÉm tra xem m·ªôt b·∫£n ƒë·ªì c√≥ ch·ª©a m·ªôt √°nh x·∫° cho kh√≥a ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh hay kh√¥ng");
        System.out.println("[8].Ki·ªÉm tra xem m·ªôt b·∫£n ƒë·ªì c√≥ ch·ª©a m·ªôt √°nh x·∫° cho gi√° tr·ªã ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh hay kh√¥ng");
        System.out.println("[9].T·∫°o m·ªôt khung nh√¨n t·∫≠p h·ª£p c·ªßa c√°c √°nh x·∫° c√≥ trong m·ªôt b·∫£n ƒë·ªì.");
        System.out.println("[10].L·∫•y gi√° tr·ªã c·ªßa m·ªôt kh√≥a ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh trong b·∫£n ƒë·ªì");
        System.out.println("[11].C√≥ ƒë∆∞·ª£c m·ªôt khung nh√¨n t·∫≠p h·ª£p c√°c kh√≥a c√≥ trong b·∫£n ƒë·ªì n√†y");
        System.out.println("[12].ƒê·ªÉ c√≥ ƒë∆∞·ª£c m·ªôt ch·∫ø ƒë·ªô xem t·∫≠p h·ª£p c√°c gi√° tr·ªã c√≥ trong b·∫£n ƒë·ªì n√†y");
        System.out.println("[0].Exit");
    }


    public static void modificationElement() {
        HashMap<String, String> map = new HashMap<>();
        Scanner sc = new Scanner(System.in);
        System.out.print("Nh·∫≠p s·ªë l∆∞·ª£ng ph·∫ßn t·ª≠ :");
        int n1 = Integer.parseInt(sc.nextLine());
        for (int i = 0; i < n1; ++i) {
            System.out.println(" ph·∫ßn t·ª≠ " + (i + 1));
            System.out.print("Nh·∫≠p gi√° tr·ªã Key: ");
            String key = sc.nextLine();
            System.out.print("Nh·∫≠p gi√° tr·ªã value: ");
            String value = sc.nextLine();
            map.put(key, value);
        }
        System.out.println("Map ban ƒë·∫ßu: " + map);
        System.out.println("Nh·∫≠p gi√° tr·ªã key v√† value m·ªõi");
        System.out.print("Nh·∫≠p gi√° tr·ªã Key: ");
        String newKey = sc.nextLine();
        System.out.print("Nh·∫≠p gi√° tr·ªã value: ");
        String newValue = sc.nextLine();
        map.put(newKey, newValue);
        System.out.println("Map sau khi li√™n k·∫øt gi√° tr·ªã : " + map);
    }

    public static void mapSize() {
        HashMap<String, String> map = new HashMap<>();
        Scanner sc = new Scanner(System.in);
        System.out.print("Nh·∫≠p s·ªë l∆∞·ª£ng ph·∫ßn t·ª≠ :");
        int n1 = Integer.parseInt(sc.nextLine());
        for (int i = 0; i < n1; ++i) {
            System.out.println(" ph·∫ßn t·ª≠ " + (i + 1));
            System.out.print("Nh·∫≠p gi√° tr·ªã Key: ");
            String key = sc.nextLine();
            System.out.print("Nh·∫≠p gi√° tr·ªã value: ");
            String value = sc.nextLine();
            map.put(key, value);
        }
        System.out.println("Map ban ƒë·∫ßu: " + map);
        System.out.println("Size of Map: " + map.size());
    }

    public static void mapCopy() {
        HashMap<String, String> map1 = new HashMap<>();
        Scanner sc = new Scanner(System.in);
        System.out.print("Nh·∫≠p s·ªë l∆∞·ª£ng ph·∫ßn t·ª≠ :");
        int n1 = Integer.parseInt(sc.nextLine());
        for (int i = 0; i < n1; ++i) {
            System.out.println(" ph·∫ßn t·ª≠ " + (i + 1));
            System.out.print("Nh·∫≠p gi√° tr·ªã Key: ");
            String key = sc.nextLine();
            System.out.print("Nh·∫≠p gi√° tr·ªã value: ");
            String value = sc.nextLine();
            map1.put(key, value);
        }
        System.out.println("Map1 : " + map1);
        HashMap<String, String> map2 = new HashMap<>();
        map2.putAll(map1);
        System.out.println("Map2 sau khi sao ch√©p: " + map2);
    }

    public static void deletedMap() {
        HashMap<String, String> map1 = new HashMap<>();
        Scanner sc = new Scanner(System.in);
        System.out.print("Nh·∫≠p s·ªë l∆∞·ª£ng ph·∫ßn t·ª≠ :");
        int n1 = Integer.parseInt(sc.nextLine());
        for (int i = 0; i < n1; ++i) {
            System.out.println(" ph·∫ßn t·ª≠ " + (i + 1));
            System.out.print("Nh·∫≠p gi√° tr·ªã Key: ");
            String key = sc.nextLine();
            System.out.print("Nh·∫≠p gi√° tr·ªã value: ");
            String value = sc.nextLine();
            map1.put(key, value);
        }
        System.out.println("Map: " + map1);
        map1.clear();
        System.out.println("Sau khi lo·∫°i b·ªè √°nh x·∫° ra kh·ªèi Map: " + map1);
    }

    public static void checkEmptyMap() {
        HashMap<String, String> map1 = new HashMap<>();
        Scanner sc = new Scanner(System.in);
        System.out.print("Nh·∫≠p s·ªë l∆∞·ª£ng ph·∫ßn t·ª≠ :");
        int n1 = Integer.parseInt(sc.nextLine());
        for (int i = 0; i < n1; ++i) {
            System.out.println(" ph·∫ßn t·ª≠ " + (i + 1));
            System.out.print("Nh·∫≠p gi√° tr·ªã Key: ");
            String key = sc.nextLine();
            System.out.print("Nh·∫≠p gi√° tr·ªã value: ");
            String value = sc.nextLine();
            map1.put(key, value);
        }
        boolean result = map1.isEmpty();
        if (result) {
            System.out.println("Map is a empty");
        } else {
            System.out.println("Map isn't not empty");
            System.out.println("Map: " + map1);
        }
    }

    public static void shallowCopyMap() {
        HashMap<String, String> map1 = new HashMap<>();
        Scanner sc = new Scanner(System.in);
        System.out.print("Nh·∫≠p s·ªë l∆∞·ª£ng ph·∫ßn t·ª≠ :");
        int n1 = Integer.parseInt(sc.nextLine());
        for (int i = 0; i < n1; ++i) {
            System.out.println(" ph·∫ßn t·ª≠ " + (i + 1));
            System.out.print("Nh·∫≠p gi√° tr·ªã Key: ");
            String key = sc.nextLine();
            System.out.print("Nh·∫≠p gi√° tr·ªã value: ");
            String value = sc.nextLine();
            map1.put(key, value);
        }
        //HashMap<String, String> map2 = ( HashMap<String,String>)map1.clone();
        HashMap<String, String> map2 = new HashMap<>(map1);
        System.out.println("Map1: " + map1);
        System.out.println("Shallow copy Map: " + map2);
    }

    public static void checkSpecifiedKey() {
        HashMap<String, String> map1 = new HashMap<>();
        Scanner sc = new Scanner(System.in);
        System.out.print("Nh·∫≠p s·ªë l∆∞·ª£ng ph·∫ßn t·ª≠ :");
        int n1 = Integer.parseInt(sc.nextLine());
        for (int i = 0; i < n1; ++i) {
            System.out.println(" ph·∫ßn t·ª≠ " + (i + 1));
            System.out.print("Nh·∫≠p gi√° tr·ªã Key: ");
            String key = sc.nextLine();
            System.out.print("Nh·∫≠p gi√° tr·ªã value: ");
            String value = sc.nextLine();
            map1.put(key, value);
        }
        System.out.println("Map1: " + map1);
        System.out.print("Enter specified key to check: ");
        String keyCheck = sc.nextLine();
        if (map1.containsKey(keyCheck)) {
            System.out.println("The map contains a mapping for the key: " + keyCheck);
        } else {
            System.out.println("The map doesn't contains a mapping for the key");
        }
    }
    public static void checkSpecifiedValue() {
        HashMap<String, String> map1 = new HashMap<>();
        Scanner sc = new Scanner(System.in);
        System.out.print("Nh·∫≠p s·ªë l∆∞·ª£ng ph·∫ßn t·ª≠ :");
        int n1 = Integer.parseInt(sc.nextLine());
        for (int i = 0; i < n1; ++i) {
            System.out.println(" ph·∫ßn t·ª≠ " + (i + 1));
            System.out.print("Nh·∫≠p gi√° tr·ªã Key: ");
            String key = sc.nextLine();
            System.out.print("Nh·∫≠p gi√° tr·ªã value: ");
            String value = sc.nextLine();
            map1.put(key, value);
        }
        System.out.println("Map1: " + map1);
        System.out.print("Enter specified value to check: ");
        String valueCheck = sc.nextLine();
        if (map1.containsValue(valueCheck)) {
            System.out.println("The map contains a mapping for the value: " + valueCheck);
        } else {
            System.out.println("The map doesn't contains a mapping for the value");
        }
    }
    public static void collectionViewOfMapping(){
        HashMap<String, String> map1 = new HashMap<>();
        Scanner sc = new Scanner(System.in);
        System.out.print("Nh·∫≠p s·ªë l∆∞·ª£ng ph·∫ßn t·ª≠ :");
        int n1 = Integer.parseInt(sc.nextLine());
        for (int i = 0; i < n1; ++i) {
            System.out.println(" ph·∫ßn t·ª≠ " + (i + 1));
            System.out.print("Nh·∫≠p gi√° tr·ªã Key: ");
            String key = sc.nextLine();
            System.out.print("Nh·∫≠p gi√° tr·ªã value: ");
            String value = sc.nextLine();
            map1.put(key, value);
        }
        System.out.println("Map1: " + map1);
        Set<Map.Entry<String, String>> entries = map1.entrySet();

        System.out.println("Print out each mapping in the collection view");
        for (Map.Entry<String, String> entry : entries) {
            System.out.println(entry.getKey() + " -> " + entry.getValue());
        /*
        entry trong Map nh∆∞ m·ªôt c√°i h·ªôp ch·ª©a hai ƒë·ªì v·∫≠t,m·ªôt ƒë·ªì v·∫≠t l√† key v√† ƒë·ªì v·∫≠t c√≤n l·∫°i l√† value.Khi g·ªçi ph∆∞∆°ng th·ª©c
        entrySet(), b·∫°n s·∫Ω nh·∫≠n ƒë∆∞·ª£c m·ªôt t·∫≠p h·ª£p c√°c c√°i h·ªôp n√†y, m·ªói c√°i h·ªôp ƒë∆∞·ª£c ƒë·∫°i di·ªán b·ªüi m·ªôt ƒë·ªëi t∆∞·ª£ng Map.Entry.

        B·∫°n c√≥ th·ªÉ l·∫∑p qua t·ª´ng entry trong Set v√† truy xu·∫•t ƒë·∫øn key v√† value c·ªßa entry b·∫±ng c√°ch s·ª≠ d·ª•ng c√°c ph∆∞∆°ng
        th·ª©c getKey()  v√† getValue() c·ªßa interface Map.Entry
 ->   V√¨ v·∫≠y, khi b·∫°n mu·ªën truy c·∫≠p v√†o c·∫£ key v√† value c·ªßa m·ªôt ƒë·ªëi t∆∞·ª£ng Map, ph∆∞∆°ng th·ª©c entrySet() l√† m·ªôt l·ª±a ch·ªçn t·ªët.
         */
        }
    }

    public static void getValueOfSpecifiedKey(){
        HashMap<String, String> map1 = new HashMap<>();
        Scanner sc = new Scanner(System.in);
        System.out.print("Nh·∫≠p s·ªë l∆∞·ª£ng ph·∫ßn t·ª≠ :");
        int n1 = Integer.parseInt(sc.nextLine());
        for (int i = 0; i < n1; ++i) {
            System.out.println(" ph·∫ßn t·ª≠ " + (i + 1));
            System.out.print("Nh·∫≠p gi√° tr·ªã Key: ");
            String key = sc.nextLine();
            System.out.print("Nh·∫≠p gi√° tr·ªã value: ");
            String value = sc.nextLine();
            map1.put(key, value);
        }
        System.out.println("Map1: " + map1);
        System.out.print("Enter specified key to get: ");
        String getKey = sc.nextLine();
        String getValue = map1.get(getKey);
        System.out.println("The value of key " + getKey + " is " + getValue );
    }
    public static void setOfKeysMap(){
        HashMap<String, String> map1 = new HashMap<>();
        Scanner sc = new Scanner(System.in);
        System.out.print("Nh·∫≠p s·ªë l∆∞·ª£ng ph·∫ßn t·ª≠ :");
        int n1 = Integer.parseInt(sc.nextLine());
        for (int i = 0; i < n1; ++i) {
            System.out.println(" ph·∫ßn t·ª≠ " + (i + 1));
            System.out.print("Nh·∫≠p gi√° tr·ªã Key: ");
            String key = sc.nextLine();
            System.out.print("Nh·∫≠p gi√° tr·ªã value: ");
            String value = sc.nextLine();
            map1.put(key, value);
        }
        System.out.println("Each key in the key set");
        Set<String> keys = map1.keySet();
        for (String x : keys ){
            System.out.println(x);
        }
    }
    public static void setOfValuesMap() {
        HashMap<String, String> map1 = new HashMap<>();
        Scanner sc = new Scanner(System.in);
        System.out.print("Nh·∫≠p s·ªë l∆∞·ª£ng ph·∫ßn t·ª≠ :");
        int n1 = Integer.parseInt(sc.nextLine());
        for (int i = 0; i < n1; ++i) {
            System.out.println(" ph·∫ßn t·ª≠ " + (i + 1));
            System.out.print("Nh·∫≠p gi√° tr·ªã Key: ");
            String key = sc.nextLine();
            System.out.print("Nh·∫≠p gi√° tr·ªã value: ");
            String value = sc.nextLine();
            map1.put(key, value);
        }
        System.out.println("Each value in the value set");
        Collection<String> values = map1.values();
        for (String x : values) {
            System.out.println(x);
        }
    }


}
