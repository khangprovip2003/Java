package stringallmethod1;


import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int c = 14;
        printMenuMain();

        while (c != 0) {
            System.out.print("Option : ");

            try {
                c = Integer.parseInt(sc.nextLine());
                switch (c) {
                    case 0:
                        System.out.println("BYE BYE üòç");
                        break;
                    case 1:
                        charAt();
                        break;
                    case 2:
                        compareTo();
                        break;
                    case 3:
                        conCat();
                        break;
                    case 4:
                        contains();
                        break;
                    case 5:
                        endsWiths();
                        break;
                    case 6:
                        equals();
                        break;
                    case 7:
                        equalsIgnoreCase();
                        break;
                    case 8:
                        format();
                        break;
                    case 9:
                        getBytes();
                        break;
                    case 10:
                        getChars();
                        break;
                    case 11:
                        indexOf();
                        break;
                    case 12:
                        intern();
                        break;
                    case 13:
                        isEmpty();
                        break;
                    case 14:
                        matches();
                        break;
                    default:
                        System.out.println("Please choose true option!!!");
                }
            } catch (Exception var4) {
                System.out.println("Do you know how to input a positive number?");
            }
        }

    }

    public static void printMenuMain() {
        System.out.println("[1].charAt()");
        System.out.println("[2].compareTo()");
        System.out.println("[3].concat()");
        System.out.println("[4].contains()");
        System.out.println("[5].endsWiths()");
        System.out.println("[6].equals()");
        System.out.println("[7].equalsIgnoreCase()");
        System.out.println("[8].getBytes()");
        System.out.println("[9].formart()");
        System.out.println("[10].getchars()");
        System.out.println("[11].indexOf()");
        System.out.println("[12].intern()");
        System.out.println("[13].isEmpty()");
        System.out.println("[14].matches()");
        System.out.println("[0].Exit");
    }

    public static void charAt() {
        // Tr·∫£ v·ªÅ gi√° tr·ªã char c·ªßa chu·ªói t·∫°i v·ªã tr√≠ c√≥ ch·ªâ s·ªë index ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh b·∫Øt ƒë·∫ßu t·ª´ 0
        String a = "Khanh";
        char ch = a.charAt(2);
        System.out.println(ch);
        // output: a
    }

    public static void compareTo() {
        // so s√°nh c√°c chu·ªói cho tr∆∞·ªõc v·ªõi chu·ªói hi·ªán t·∫°i theo th·ª© t·ª± t·ª´ ƒëi·ªÉn . N√≥ tr·∫£ v·ªÅ s·ªë d∆∞∆°ng, s·ªë √¢m , s·ªë 0
        // N·∫øu chu·ªói ƒë·∫ßu ti√™n l·ªõn h∆°n chu·ªói th·ª© hai, n√≥ s·∫Ω tr·∫£ v·ªÅ s·ªë d∆∞∆°ng (ch√™nh l·ªách gi√° tr·ªã k√Ω t·ª±).
        // N·∫øu chu·ªói ƒë·∫ßu ti√™n nh·ªè h∆°n chu·ªói th·ª© hai, n√≥ s·∫Ω tr·∫£ v·ªÅ s·ªë √¢m
        // n·∫øu chu·ªói ƒë·∫ßu ti√™n l√† b·∫±ng chu·ªói th·ª© hai, n√≥ tr·∫£ v·ªÅ 0.
        String s1 = "hello";
        String s2 = "hello";
        String s3 = "meklo";
        String s4 = "hemlo";
        System.out.println(s1.compareTo(s2));
        System.out.println(s1.compareTo(s3));
        System.out.println(s1.compareTo(s4));
        // OutPut: 0 -5  1
    }

    public static void conCat() {
        //Ph∆∞∆°ng th·ª©c concat() n·ªëi th√™m chu·ªói ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh v√†o cu·ªëi chu·ªói ƒë√£ cho
        String s1 = "java string";
        s1.concat("is immutable");
        System.out.println(s1);
        s1 = s1.concat(" is immutable so assign it explicitly");
        System.out.println(s1);
//        Output:
//        java string
//        java string is immutable so assign it explicitly
    }

    /*
    Immutable String in Java
    Trong Java ƒë·ªëi t∆∞·ª£ng String l√† b·∫•t bi·∫øn (immutable) b·∫•t bi·∫øn c√≥ nghƒ©a l√† kh√¥ng th·ªÉ thay ƒë·ªïi
    V√≠ d·ª•: String S = "Hello"
          s.concat("Java");
          System.out.println(s);
          Output: Hello
    Nh·ªØng ta g√°n S v√†o bi·∫øn tham chi·∫øu, S tham chi·∫øu chu·ªói m·ªõi.
    V√≠ d·ª•: String s = "Hello";
           s = s.concat("Java");
           System.out.println(s);
           output: Hello Java
           */
    public static void contains() {
        //Ph∆∞∆°ng th·ª©c contains() t√¨m ki·∫øm chu·ªói k√Ω t·ª± trong chu·ªói n√†y. N√≥ tr·∫£ v·ªÅ true n·∫øu chu·ªói c√°c gi√° tr·ªã char ƒë∆∞·ª£c
        //t√¨m th·∫•y trong chu·ªói n√†y, n·∫øu kh√¥ng tr·∫£ v·ªÅ false.
        String name = "what do you know about me";
        System.out.println(name.contains("do you know"));
        System.out.println(name.contains("about"));
        System.out.println(name.contains("hello"));
        System.out.println();
    }

    public static void endsWiths() {
        //Ph∆∞∆°ng th·ª©c endsWith() ki·ªÉm tra n·∫øu chu·ªói n√†y k·∫øt th√∫c v·ªõi h·∫≠u t·ªë nh·∫•t ƒë·ªãnh
        //  N√≥ tr·∫£ v·ªÅ true n·∫øu chu·ªói n√†y k·∫øt th√∫c v·ªõi h·∫≠u t·ªë ƒë√£ cho, n·∫øu kh√°c th√¨ tr·∫£ v·ªÅ false.
        String s1 = "hello java";
        System.out.println(s1.endsWith("t"));
        System.out.println(s1.endsWith("java"));
//         Output:
//         false
//         true
    }

    public static void equals() {
        //Ph∆∞∆°ng th·ª©c equals() so s√°nh hai chu·ªói ƒë∆∞a ra d·ª±a tr√™n n·ªôi dung c·ªßa chu·ªói.
        // N·∫øu hai chu·ªói kh√°c nhau n√≥ tr·∫£ v·ªÅ false. N·∫øu hai chu·ªói b·∫±ng nhau n√≥ tr·∫£ v·ªÅ true.
        //Ph∆∞∆°ng th·ª©c equals() c·ªßa l·ªõp String ƒë∆∞·ª£c ghi ƒë√® t·ª´ ph∆∞∆°ng th·ª©c equals() c·ªßa l·ªõp Object.
        String s1 = "java";
        String s2 = "java";
        String s3 = "JAVA";
        String s4 = "python";
        System.out.println(s1.equals(s2));
        System.out.println(s1.equals(s3));
        System.out.println(s1.equals(s4));
//        Output:
//        true
//        false
//        false
    }

    public static void equalsIgnoreCase() {
        //Ph∆∞∆°ng th·ª©c equalsIgnoreCase() so s√°nh hai chu·ªói ƒë∆∞a ra d·ª±a tr√™n n·ªôi dung c·ªßa chu·ªói kh√¥ng ph√¢n bi·ªát ch·ªØ hoa v√† ch·ªØ th∆∞·ªùng.
        // N·∫øu hai chu·ªói kh√°c nhau n√≥ tr·∫£ v·ªÅ false. N·∫øu hai chu·ªói b·∫±ng nhau n√≥ tr·∫£ v·ªÅ true.
        String s1 = "java";
        String s2 = "java";
        String s3 = "JAVA";
        String s4 = "python";
        System.out.println(s1.equalsIgnoreCase(s2));
        System.out.println(s1.equalsIgnoreCase(s3));
        System.out.println(s1.equalsIgnoreCase(s4));
//        Output:
//        true
//        true
//        false
    }

    public static void format() {
        String name = "sonoo";
        String sf1 = String.format("name is %s", name);
        String sf2 = String.format("value is %f", 32.33434);
        String sf3 = String.format("value is %32.12f", 32.33434);

        System.out.println(sf1);
        System.out.println(sf2);
        System.out.println(sf3);
//        Output:
//        name is sonoo
//        value is 32.334340
//        value is                  32.334340000000
    }

    public static void getBytes() {
        // Ph∆∞∆°ng th·ª©c getBytes() tr·∫£ v·ªÅ m·∫£ng byte c·ªßa chu·ªói.
        String s1 = "ABCDEFG";
        byte[] barr = s1.getBytes();
        for (int i = 0; i < barr.length; i++) {
            System.out.println(barr[i]);
//            Output:
//
//            65
//            66
//            67
//            68
//            69
//            70
//            71
        }

    }

    public static void getChars() {
    /*
       Ph∆∞∆°ng th·ª©c getChars() sao ch√©p n·ªôi dung c·ªßa chu·ªói th√†nh m·∫£ng Char c·ª• th·ªÉ.C√≥ 4 ƒë·ªëi s·ªë truy·ªÅn v√†o ph∆∞∆°ng th·ª©c getChars().
       public void getChars(int srcBeginIndex, int srcEndIndex, char[] destination, int dstBeginIndex)
       - src BeginIndex: v·ªã tr√≠ b·∫Øt ƒë·∫ßu c·ªßa kho·∫£ng c·∫ßn sao ch√©p chu·ªói hi·ªán t·∫°i
       - src EndeIndex: v·ªã tr√≠ k·∫øt th√∫c c·ªßa kho·∫£ng c·∫ßn sao ch√©p chu·ªói hi·ªán t·∫°i
       - destination:M·∫£ng k√Ω t·ª± ƒë·∫øn ƒë·ªÉ l·ªØu tr·ªØ kho·∫£ng sao ch√©p
       - dst beginIndex: v·ªã tr√≠ b·∫Øt ƒë·∫ßu trong m·∫£ng k√Ω t·ª± ƒë·∫øn ƒë·ªÉ l·ªØu tr·ªØ kho·∫£ng sao ch√©p
     */
        String str = "Hello,  World";
        // sao ch√©p kho·∫£ng t·ª´ v·ªã tr√≠ 7 -> 12 v√†o m·∫£ng k√Ω t·ª± dest t·∫°i v·ªã tr√≠ 0
        char[] dest = new char[6];
        str.getChars(7, 13, dest, 0);
        System.out.println(dest);
    }

    public static void indexOf() {
    /*
    Ph∆∞∆°ng th·ª©c indexOf() tr·∫£ v·ªÅ ch·ªâ s·ªë c·ªßa gi√° tr·ªã k√Ω t·ª± ƒë√£ cho ho·∫∑c chu·ªói con.
    N·∫øu kh√¥ng t√¨m th·∫•y tr·∫£ l·∫°i gi√° tr·ªã -1. Ch·ªâ s·ªë (index) ƒë∆∞·ª£c ƒë·∫øm t·ª´ 0.
        - int indexOf(int ch) //Tr·∫£ v·ªÅ v·ªã tr·ªã c·ªßa gi√° tr·ªã Char ƒë√£ cho.
        - int indexOf(int ch, int fromIndex) //Tr·∫£ v·ªÅ v·ªã tr·ªã c·ªßa gi√° tr·ªã Char ƒë√£ cho t√≠nh t·ª´ v·ªã tr√≠ fromIndex.
        - int indexOf(String substring) //Tr·∫£ v·ªÅ v·ªã tr·ªã c·ªßa chu·ªói con.
        - int indexOf(String substring, int fromIndex) //Tr·∫£ v·ªÅ v·ªã tr·ªã c·ªßa chu·ªói con ƒë√£ cho t√≠nh t·ª´ v·ªã tr√≠ fromIndex.
    */
        String s1 = "this is index of example";
        System.out.println("Truy·ªÅn v√†o chu·ªói con");
        int index1 = s1.indexOf("is");
        int index2 = s1.indexOf("index");
        System.out.println(index1 + "  " + index2);//2 8
        System.out.println("Truy·ªÅn v√†o chu·ªói con v√† ch·ªâ s·ªë b·∫Øt ƒë·∫ßu");
        int index3 = s1.indexOf("is", 4);
        System.out.println(index3);//5
        System.out.println("Truy·ªÅn v√†o gi√° tr·ªã Char");
        int index4 = s1.indexOf('s');
        System.out.println(index4);//3
        System.out.println("Truy·ªÅn v√†o gi√° tr·ªã Char v√† ch·ªâ s·ªë Index");
        int index5 = s1.indexOf('i', 7);
        System.out.println(index5);//8
    }

    public static void intern() {
        //Ph∆∞∆°ng th·ª©c intern() c√≥ th·ªÉ ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ tr·∫£ v·ªÅ chu·ªói t·ª´ Pool ch·ª©a h·∫±ng s·ªë chu·ªói khi n√≥ ƒë∆∞·ª£c t·∫°o b·ªüi t·ª´ kh√≥a new.
        String s1 = new String("hello");
        String s2 = "hello";
        String s3 = s1.intern();//tr·∫£ v·ªÅ chu·ªói t·ª´ Pool
        System.out.println(s1 == s2);//false v√¨ reference l√† kh√°c nhau
        System.out.println(s2 == s3);//true v√¨ reference l√† gi·ªëng nhau
    }

    public static void isEmpty() {
        //Ph∆∞∆°ng th·ª©c isEmpty() khi chu·ªói tr·ªëng tr·∫£ v·ªÅ true, ng∆∞·ª£c l·∫°i tr·∫£ v·ªÅ false
        String s1 = "";
        String s2 = "hello java";
        System.out.println(s1.isEmpty());
        System.out.println(s2.isEmpty());
    }

    public static void matches(){
        Scanner sc = new Scanner(System.in);
        String s1;
        System.out.println("Enter String S1:");
        s1 = sc.nextLine();
        if (s1.matches("[0-9]+")) {
            System.out.println("Chu·ªói n√†y in ra to√†n s·ªë.");
        } else if (s1.matches("[a-zA-Z]+")) {
            System.out.println("Chu·ªói n√†y in ra to√†n ch·ªØ.");
        } else {
            System.out.println("Chu·ªói n√†y kh√¥ng in ra to√†n s·ªë ho·∫∑c to√†n ch·ªØ.");
        }
    /*
    \\d  -> vi·∫øt t·∫Øt cho [0-9]: ƒë·∫°i di·ªán cho m·ªôt ch·ªØ s·ªë.
    \\w  -> vi·∫øt t·∫Øt cho [a-zA-Z0-9_]: ƒë·∫°i di·ªán cho m·ªôt k√Ω t·ª± ch·ªØ, s·ªë ho·∫∑c d·∫•u g·∫°ch d∆∞·ªõi.
    \\s ->  vi·∫øt t·∫Øt cho kho·∫£ng tr·∫Øng: ƒë·∫°i di·ªán cho m·ªôt kho·∫£ng tr·∫Øng, tab ho·∫∑c d√≤ng m·ªõi.
    \\d+ ->  m·ªôt ho·∫∑c nhi·ªÅu ch·ªØ s·ªë (t·ª©c l√† m·ªôt chu·ªói g·ªìm √≠t nh·∫•t m·ªôt ch·ªØ s·ªë)
    \\w+ -> [a-zA-Z]+   : ƒë·∫°i di·ªán cho m·ªôt chu·ªói k√Ω t·ª± to√†n s·ªë
    ƒê·ªÉ ƒë·∫°i di·ªán cho m·ªôt k√Ω t·ª± b·∫•t k·ª≥ nh∆∞ng kh√¥ng ph·∫£i s·ªë, d·∫•u c√°ch, ho·∫∑c g·∫°ch d∆∞·ªõi, b·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng bi·ªÉu th·ª©c ch√≠nh quy \\D.

    t√¨m t·∫•t c·∫£ c√°c chu·ªói bao g·ªìm c√°c k√Ω t·ª± b·∫•t k·ª≥ ngo·∫°i tr·ª´ s·ªë, d·∫•u c√°ch v√† g·∫°ch d∆∞·ªõi, b·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng
    \\D+ ƒë·ªÉ ƒë·∫°i di·ªán cho c√°c chu·ªói nh∆∞ "Hello", "world!", "@#$%", v.v.

     */

    }

}



